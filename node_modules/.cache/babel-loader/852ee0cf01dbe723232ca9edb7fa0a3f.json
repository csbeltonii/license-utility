{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tehbl\\\\OneDrive\\\\React stuff\\\\license-utility\\\\src\\\\components\\\\Dealer.tsx\",\n    _s = $RefreshSig$();\n\n/**@jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { getCompanyAsync } from \"../data/companies\";\nimport { useParams } from \"react-router-dom\";\nimport Page from \"./Page\";\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst Dealer = () => {\n  _s();\n\n  const {\n    accountNumber\n  } = useParams();\n  const [company, setCompany] = React.useState(undefined);\n  const {\n    register,\n    errors,\n    handleSubmit,\n    formState\n  } = useForm();\n  React.useEffect(() => {\n    const doGetCompany = async accountNumber => {\n      console.log(accountNumber);\n      let company = await getCompanyAsync(accountNumber);\n      setCompany(company);\n    };\n\n    doGetCompany(Number(accountNumber));\n  }, [accountNumber]);\n\n  const handleSubmitEvent = async () => {\n    console.log();\n  };\n\n  return _jsxDEV(Page, {\n    title: `Update licenses from ${company === null || company === void 0 ? void 0 : company.CompanyName}`,\n    children: _jsxDEV(\"div\", {\n      css: css`\n          text-align: center;\n        `,\n      children: _jsxDEV(Form, {\n        onSubmit: handleSubmitEvent,\n        children: [_jsxDEV(FormGroup, {\n          row: true,\n          children: [_jsxDEV(Label, {\n            for: \"licenseCount\",\n            children: \"Desktop Licenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), _jsxDEV(Input, {\n            type: \"number\",\n            value: company === null || company === void 0 ? void 0 : company.Licenses,\n            id: \"licenseCount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), _jsxDEV(FormGroup, {\n          row: true,\n          children: [_jsxDEV(Label, {\n            for: \"mobileCount\",\n            children: \"Mobile Licenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), _jsxDEV(Input, {\n            type: \"number\",\n            value: company === null || company === void 0 ? void 0 : company.LicensesMobileCount,\n            id: \"mobileCount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), _jsxDEV(FormGroup, {\n          row: true,\n          className: \"mb-3\",\n          children: [_jsxDEV(Label, {\n            for: \"trialCount\",\n            children: \"Trial Licenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), _jsxDEV(Input, {\n            type: \"number\",\n            value: company === null || company === void 0 ? void 0 : company.TrialLicenses,\n            id: \"trialCount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dealer, \"vY2eMCFOih/HvPdQjiHrJ8z8Kjo=\", true, function () {\n  return [useParams];\n});\n\n_c = Dealer;\nexport default Dealer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dealer\");","map":{"version":3,"sources":["C:/Users/tehbl/OneDrive/React stuff/license-utility/src/components/Dealer.tsx"],"names":["css","React","getCompanyAsync","useParams","Page","Form","Label","Input","FormGroup","Button","Dealer","accountNumber","company","setCompany","useState","undefined","register","errors","handleSubmit","formState","useForm","useEffect","doGetCompany","console","log","Number","handleSubmitEvent","CompanyName","Licenses","LicensesMobileCount","TrialLicenses"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAkBC,eAAlB,QAAyC,mBAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,YAAtD;;;AAaA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAoBR,SAAS,EAAnC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAoCC,SAApC,CAA9B;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,MAAgDC,OAAO,EAA7D;AAEAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAMC,YAAY,GAAG,MAAOX,aAAP,IAAiC;AACpDY,MAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACA,UAAIC,OAAO,GAAG,MAAMV,eAAe,CAACS,aAAD,CAAnC;AAEAE,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KALD;;AAOAU,IAAAA,YAAY,CAACG,MAAM,CAACd,aAAD,CAAP,CAAZ;AACD,GATD,EASG,CAACA,aAAD,CATH;;AAWA,QAAMe,iBAAiB,GAAG,YAAY;AACpCH,IAAAA,OAAO,CAACC,GAAR;AACD,GAFD;;AAIA,SACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAG,wBAAuBZ,OAAxB,aAAwBA,OAAxB,uBAAwBA,OAAO,CAAEe,WAAY,EAA1D;AAAA,cACE;AACE,MAAA,GAAG,EAAE3B,GAAI;AACjB;AACA,SAHM;AAAA,gBAKE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE0B,iBAAhB;AAAA,mBACE,QAAC,SAAD;AAAW,UAAA,GAAG,MAAd;AAAA,qBACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAEd,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEgB,QAArC;AAA+C,YAAA,EAAE,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKE,QAAC,SAAD;AAAW,UAAA,GAAG,MAAd;AAAA,qBACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAEhB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEiB,mBAFlB;AAGE,YAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAaE,QAAC,SAAD;AAAW,UAAA,GAAG,MAAd;AAAe,UAAA,SAAS,EAAC,MAAzB;AAAA,qBACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAEjB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEkB,aAFlB;AAGE,YAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAqBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAvDD;;GAAMpB,M;UACsBP,S;;;KADtBO,M;AAyDN,eAAeA,MAAf","sourcesContent":["/**@jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport { Company, getCompanyAsync } from \"../data/companies\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Page from \"./Page\";\r\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\r\n\r\ninterface Props {\r\n  accountNumber: number;\r\n}\r\n\r\ntype FormData = {\r\n  companyId: number;\r\n  licenseCount: number;\r\n  mobileLicenseCount: number;\r\n  trialLicenseCount: number;\r\n};\r\n\r\nconst Dealer = () => {\r\n  const { accountNumber } = useParams();\r\n\r\n  const [company, setCompany] = React.useState<Company | undefined>(undefined);\r\n\r\n  const { register, errors, handleSubmit, formState } = useForm<FormData>();\r\n\r\n  React.useEffect(() => {\r\n    const doGetCompany = async (accountNumber: number) => {\r\n      console.log(accountNumber);\r\n      let company = await getCompanyAsync(accountNumber);\r\n\r\n      setCompany(company);\r\n    };\r\n\r\n    doGetCompany(Number(accountNumber));\r\n  }, [accountNumber]);\r\n\r\n  const handleSubmitEvent = async () => {\r\n    console.log();\r\n  };\r\n\r\n  return (\r\n    <Page title={`Update licenses from ${company?.CompanyName}`}>\r\n      <div\r\n        css={css`\r\n          text-align: center;\r\n        `}\r\n      >\r\n        <Form onSubmit={handleSubmitEvent}>\r\n          <FormGroup row>\r\n            <Label for=\"licenseCount\">Desktop Licenses</Label>\r\n            <Input type=\"number\" value={company?.Licenses} id=\"licenseCount\" />\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"mobileCount\">Mobile Licenses</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={company?.LicensesMobileCount}\r\n              id=\"mobileCount\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup row className=\"mb-3\">\r\n            <Label for=\"trialCount\">Trial Licenses</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={company?.TrialLicenses}\r\n              id=\"trialCount\"\r\n            />\r\n          </FormGroup>\r\n          <Button color=\"primary\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dealer;\r\n"]},"metadata":{},"sourceType":"module"}