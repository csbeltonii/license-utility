{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tehbl\\\\OneDrive\\\\React stuff\\\\license-utility\\\\src\\\\components\\\\Dealer.tsx\",\n    _s = $RefreshSig$();\n\n/**@jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { getCompanyAsync, updateCompany } from \"../data/companies\";\nimport { useParams } from \"react-router-dom\";\nimport Page from \"./Page\";\nimport { Form, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { FieldContainer, FieldInput, FieldLabel, Fieldset } from \"./Styles/Styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst Dealer = () => {\n  _s();\n\n  const {\n    accountNumber\n  } = useParams();\n  const [company, setCompany] = React.useState(undefined);\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    const doGetCompany = async accountNumber => {\n      console.log(accountNumber);\n      let company = await getCompanyAsync(accountNumber);\n      setCompany(company);\n    };\n\n    doGetCompany(Number(accountNumber));\n  }, [accountNumber]);\n\n  const submitForm = async data => {\n    await updateCompany({\n      CompanyId: data.companyId,\n      CompanyName: \"\",\n      AccountNumber: 0,\n      Licenses: data.licenseCount,\n      LicensesMobileCount: data.mobileLicenseCount,\n      TrialLicenses: data.trialLicenseCount\n    });\n    navigate(\"/\");\n  };\n\n  return _jsxDEV(Page, {\n    title: `Update licenses from ${company === null || company === void 0 ? void 0 : company.CompanyName}`,\n    children: _jsxDEV(\"div\", {\n      css: css`\n          text-align: center;\n        `,\n      children: _jsxDEV(Form, {\n        onSubmit: handleSubmit(submitForm),\n        disabled: formState.isSubmitting,\n        children: [_jsxDEV(\"input\", {\n          ref: register,\n          defaultValue: company === null || company === void 0 ? void 0 : company.CompanyId,\n          type: \"text\",\n          name: \"companyId\",\n          id: \"companyId\",\n          hidden: true,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), _jsxDEV(Fieldset, {\n          children: [_jsxDEV(FieldContainer, {\n            children: [_jsxDEV(FieldLabel, {\n              htmlFor: \"licenseCount\",\n              children: \"Desktop Licenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), _jsxDEV(FieldInput, {\n              type: \"number\",\n              min: \"0\",\n              ref: register,\n              defaultValue: company === null || company === void 0 ? void 0 : company.Licenses,\n              id: \"licenseCount\",\n              name: \"licenseCount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), _jsxDEV(FieldContainer, {\n            children: [_jsxDEV(FieldLabel, {\n              htmlFor: \"mobileCount\",\n              children: \"Mobile Licenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), _jsxDEV(FieldInput, {\n              ref: register,\n              defaultValue: company === null || company === void 0 ? void 0 : company.LicensesMobileCount,\n              type: \"number\",\n              min: \"0\",\n              id: \"mobileLicenseCount\",\n              name: \"mobileLicenseCount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), _jsxDEV(FieldContainer, {\n            children: [_jsxDEV(FieldLabel, {\n              htmlFor: \"trialCount\",\n              children: \"Trial Licenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), _jsxDEV(FieldInput, {\n              ref: register,\n              defaultValue: company === null || company === void 0 ? void 0 : company.TrialLicenses,\n              type: \"number\",\n              min: \"0\",\n              id: \"trialLicenseCount\",\n              name: \"trialLicenseCount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dealer, \"CKbMoV4Kej4Y2AuNitVvBLBz3Z4=\", false, function () {\n  return [useParams, useForm, useNavigate];\n});\n\n_c = Dealer;\nexport default Dealer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dealer\");","map":{"version":3,"sources":["C:/Users/tehbl/OneDrive/React stuff/license-utility/src/components/Dealer.tsx"],"names":["css","React","getCompanyAsync","updateCompany","useParams","Page","Form","Button","useForm","FieldContainer","FieldInput","FieldLabel","Fieldset","useNavigate","Dealer","accountNumber","company","setCompany","useState","undefined","register","handleSubmit","formState","mode","navigate","useEffect","doGetCompany","console","log","Number","submitForm","data","CompanyId","companyId","CompanyName","AccountNumber","Licenses","licenseCount","LicensesMobileCount","mobileLicenseCount","TrialLicenses","trialLicenseCount","isSubmitting"],"mappings":"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","sourcesContent":["/**@jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport { Company, getCompanyAsync, updateCompany } from \"../data/companies\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Page from \"./Page\";\r\nimport { Form, Button } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  FieldContainer,\r\n  FieldInput,\r\n  FieldLabel,\r\n  Fieldset,\r\n} from \"./Styles/Styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ntype FormData = {\r\n  companyId: number;\r\n  licenseCount: number;\r\n  mobileLicenseCount: number;\r\n  trialLicenseCount: number;\r\n};\r\n\r\nconst Dealer = () => {\r\n  const { accountNumber } = useParams();\r\n\r\n  const [company, setCompany] = React.useState<Company | undefined>(undefined);\r\n\r\n  const { register, handleSubmit, formState } = useForm<FormData>({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    const doGetCompany = async (accountNumber: number) => {\r\n      console.log(accountNumber);\r\n      let company = await getCompanyAsync(accountNumber);\r\n\r\n      setCompany(company);\r\n    };\r\n\r\n    doGetCompany(Number(accountNumber));\r\n  }, [accountNumber]);\r\n\r\n  const submitForm = async (data: FormData) => {\r\n    await updateCompany({\r\n      CompanyId: data.companyId,\r\n      CompanyName: \"\",\r\n      AccountNumber: 0,\r\n      Licenses: data.licenseCount,\r\n      LicensesMobileCount: data.mobileLicenseCount,\r\n      TrialLicenses: data.trialLicenseCount,\r\n    });\r\n\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Page title={`Update licenses from ${company?.CompanyName}`}>\r\n      <div\r\n        css={css`\r\n          text-align: center;\r\n        `}\r\n      >\r\n        <Form\r\n          onSubmit={handleSubmit(submitForm)}\r\n          disabled={formState.isSubmitting}\r\n        >\r\n          <input\r\n            ref={register}\r\n            defaultValue={company?.CompanyId}\r\n            type=\"text\"\r\n            name=\"companyId\"\r\n            id=\"companyId\"\r\n            hidden\r\n            readOnly\r\n          />\r\n          <Fieldset>\r\n            <FieldContainer>\r\n              <FieldLabel htmlFor=\"licenseCount\">Desktop Licenses</FieldLabel>\r\n              <FieldInput\r\n                type=\"number\"\r\n                min=\"0\"\r\n                ref={register}\r\n                defaultValue={company?.Licenses}\r\n                id=\"licenseCount\"\r\n                name=\"licenseCount\"\r\n              />\r\n            </FieldContainer>\r\n            <FieldContainer>\r\n              <FieldLabel htmlFor=\"mobileCount\">Mobile Licenses</FieldLabel>\r\n              <FieldInput\r\n                ref={register}\r\n                defaultValue={company?.LicensesMobileCount}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                id=\"mobileLicenseCount\"\r\n                name=\"mobileLicenseCount\"\r\n              />\r\n            </FieldContainer>\r\n            <FieldContainer>\r\n              <FieldLabel htmlFor=\"trialCount\">Trial Licenses</FieldLabel>\r\n              <FieldInput\r\n                ref={register}\r\n                defaultValue={company?.TrialLicenses}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                id=\"trialLicenseCount\"\r\n                name=\"trialLicenseCount\"\r\n              />\r\n            </FieldContainer>\r\n            <Button color=\"primary\">Submit</Button>\r\n          </Fieldset>\r\n        </Form>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dealer;\r\n"]},"metadata":{},"sourceType":"module"}